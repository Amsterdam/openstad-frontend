language: minimal

# easy way to get your local config: cat ${HOME}/.kube/config | base64 | pbcopy
env:
  global:
    - DOCKER_PUBLIC_USERNAME=toshkoevoets
    - DOCKER_IMAGE_NAME=appbuilder-frontend
    - K8S_DEPLOYMENT_NAME=openstad-frontend
    - K8S_NAMESPACE=openstad
    - FRONTED_PORT=4444
    - FRONTEND_MONGO_SCHEME=mongodb://mongo
    - FRONTEND_MONGO_DB_HOST=mongo
    - FRONTEND_MONGO_PORT=27017
    - FRONTEND_MINIFY_JS=ON
    - COOKIE_SECURE_OFF=yes
    - API=http://localhost:8111
    - IMAGE_API_URL=http://localhost:3333
    - IMAGE_API_ACCESS_TOKEN=xxxx
    - IMAGE_API_ACCESS_TOKEN=xxxx
    - SITE_API_KEY=xxxx
    - DEFAULT_DB=localhost2
    - DEFAULT_HOST=localhost:4444
    - APP_URL=http://localhost:4444
services:
  - docker

before_install:
  - docker build -t ${DOCKER_PUBLIC_USERNAME}/${DOCKER_IMAGE_NAME}:${TRAVIS_BUILD_ID} .

script:
  - docker run -e CI=true ${DOCKER_PUBLIC_USERNAME}/${DOCKER_IMAGE_NAME}:${TRAVIS_BUILD_ID}  npm run test -- --coverage
  - docker-compose -f docker-compose.travis.yml run frontend node apostrophe.js apostrophe:generation

deploy:
  # what branches to deploy automatically
  - provider: script
    script: bash docker_deploy
    on:
      all_branches: true
      # @TODO:
      # Add an autodeploy setup of the release branche
      # Either Create different config in travis to deploy to different cluster
      # Or add a different namespace for ACC
      # condition: $TRAVIS_BRANCH =~ ^(development|release)$
      condition: $TRAVIS_BRANCH =~ ^(app-development)$
  # master automatically pushes new docker container with latest tag to docker
  - provider: script
    #script not yet tested
    script: bash docker_publish
    on:
      branch: master
